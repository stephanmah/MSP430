#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack


main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer


SetupP1 BIS.b                           #BIT2,&P1DIR;                    set p1.2 as output
        BIC.b                           #BIT3,&P1DIR;                    set p1.3 as input
        BIS.b                           #BIT3,&P1REN;                    P1.3 resistor enabled
        BIS.b                           #BIT3,&P1OUT;                    Pull up resistor 
        BIS.b                           #BIT3,&P1IES;                    High to low transition
        BIC.b                           #BIT3,&P1IFG;                    P1.3 Interrupt flag clear
        BIS.B                           #BIT3,&P1IE;                     P1.3 interrupt enable
        BIS.b                           #BIT2,&P1SEL;                   Set P1.2 as TA0 Output

SetupTA0 MOV.b                          #10b,&TASSEL_1;                 Set SMClk as Source                  
        

        nop
        BIS.w                           #GIE,SR;                        Enable Global Interrupt
        nop

MainLoop:
        JMP MainLoop;
        NOP
        

P1_ISR:
      XOR.b                             #BIT2,&P1OUT;                   Toggle P1.0
      BIC.b                             #008h,&P1IFG;                   P1.3 Interrupt flag clear
      RETI;


;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
COMMON INTVEC
ORG RESET_VECTOR

Vector:
       ORG PORT1_VECTOR;
       DW P1_ISR;
       jmp $
       END
 
        
       
